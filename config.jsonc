{
  // Версия
  // Используется для проверки обновлений программы, не изменяйте вручную.
  "version": "2.7.6",

  // --- Настройки сессии ---
  // Идентификатор сессии текущей страницы LMArena.
  // Может быть автоматически обновлён с помощью скрипта id_updater.py.
  "session_id": "cebc557a-3f35-4794-beaf-6e33d947e0cd",

  // Идентификатор последнего сообщения в текущей сессии.
  // Может быть автоматически обновлён с помощью скрипта id_updater.py.
  "message_id": "562414bc-0ea8-412a-bd15-8ec1cc61f4af",

  // --- Конфигурация для id_updater ---
  // Последний использованный режим в id_updater.py ('direct_chat' или 'battle').
  "id_updater_last_mode": "battle",
  // Цель обновления в режиме Battle для id_updater.py ('A' или 'B').
  "id_updater_battle_target": "B",

  // --- Настройки обновления ---
  // Переключатель: автоматическая проверка обновлений
  // Если установлено в true, при запуске программа будет подключаться к GitHub для проверки новой версии.
  "enable_auto_update": true,

  // --- Переключатели функций ---

  // Переключатель: обход проверки на чувствительные слова
  // В диалог с исходным запросом пользователя добавляется пустое сообщение от пользователя, чтобы попытаться обойти цензуру.
  "bypass_enabled": true,

  // Переключатель: режим "Таверна" (Tavern Mode)
  // Этот режим предназначен для сценариев, где требуется инъекция полной истории сообщений (например, для TavernAI, SillyTavern и т.д.).
  "tavern_mode_enabled": false,

  // --- Настройки файлового хранилища ---
  // Переключатель: включение файлового хранилища
  // Если установлено в true, все изображения и мультимедийные вложения сначала загружаются на ваш собственный сервер файлового хранилища,
  // а затем возвращённый URL используется в последующих запросах вместо отправки данных в формате base64.
  "file_bed_enabled": false,

  // URL API для загрузки в файловое хранилище
  // Это адрес конечной точки /upload вашего сервиса file_bed_server/main.py.
  // Примечание: для совместимости с устаревшими парсерами рекомендуется экранировать // как \/\/.
  "file_bed_upload_url": "http:\/\/127.0.0.1:5180/upload",

  // Ключ API файлового хранилища
  // Если вы установили API_KEY в file_bed_server/main.py, укажите его здесь.
  "file_bed_api_key": "your_secret_api_key",

  // --- Настройки сопоставления моделей ---

  // Переключатель: использование идентификаторов по умолчанию, если сопоставление модели не найдено
  // Если установлено в true, при отсутствии запрошенной модели в model_endpoint_map.json
  // будут использованы глобальные session_id и message_id, определённые в config.jsonc.
  // Если установлено в false, при отсутствии сопоставления будет возвращена ошибка.
  "use_default_ids_if_mapping_not_found": true,

  // --- Расширенные настройки ---

  // Тайм-аут потокового ответа (в секундах)
  // Максимальное время ожидания сервером следующего блока данных от браузера. Используется также для непотоковых ответов.
  // Если у вас медленное соединение или модель долго отвечает, можно увеличить это значение.
  "stream_response_timeout_seconds": 360,

  // --- Настройки автоматического перезапуска ---

  // Переключатель: включение автоматического перезапуска при простое
  // Если сервер не получает запросы API в течение указанного времени (см. ниже), он автоматически перезапустится.
  "enable_idle_restart": true,

  // Тайм-аут перезапуска при простое (в секундах)
  // Если после завершения проверки и обновления сервер не получает запросы в течение этого времени, он перезапустится.
  // 5 минут = 300 секунд. Установите в -1, чтобы отключить тайм-аут (даже если переключатель выше включён).
  "idle_restart_timeout_seconds": -1,

  // --- Настройки безопасности ---

  // Ключ API
  // Установите ключ API для защиты вашего сервиса.
  // Если значение задано, все запросы к /v1/chat/completions должны содержать правильный Bearer Token в заголовке Authorization.
  "api_key": ""
}